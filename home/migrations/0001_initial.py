# Generated by Django 5.0.6 on 2024-05-30 19:03

import django.contrib.auth.models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(max_length=50)),
                ('short_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_description', models.CharField(max_length=50)),
                ('semester', models.CharField(choices=[('1st Semester', '1st Semester'), ('2nd Semester', '2nd Semester'), ('Summer', 'Summer')], default='1st Semester', max_length=20)),
                ('school_year', models.CharField(choices=[('2020-2021', '2020-2021'), ('2021-2022', '2021-2022'), ('2022-2023', '2022-2023'), ('2023-2024', '2023-2024'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026'), ('2026-2027', '2026-2027'), ('2027-2028', '2027-2028'), ('2028-2029', '2028-2029'), ('2029-2030', '2029-2030'), ('2030-2031', '2030-2031')], default='2023-2024', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Fees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_name', models.CharField(max_length=100, unique=True)),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_multiplier', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Prospectus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prospectus_name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scholarship_name', models.CharField(max_length=250)),
                ('scholarship_description', models.CharField(max_length=250)),
                ('scholarship_type', models.CharField(choices=[('Full', 'Full'), ('Half', 'Half'), ('None', 'None')], default=None, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_no', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('last_name', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('extension_name', models.CharField(max_length=50)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('staff', models.BooleanField(default=False)),
                ('student', models.BooleanField(default=False)),
                ('administrator', models.BooleanField(default=False)),
                ('faculty', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator_user',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('user', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty_user',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('user', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Staff_user',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('user', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student_user',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('user', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=None)),
                ('updated_on', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administrator_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=50)),
                ('short_name', models.CharField(max_length=50)),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='college_id', to='home.college')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=50)),
                ('course_description', models.CharField(max_length=50)),
                ('course_period', models.IntegerField()),
                ('short_name', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_department', to='home.department')),
            ],
        ),
        migrations.CreateModel(
            name='EnrollmentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_type', models.CharField(choices=[('Old Continuing', 'Old Continuing'), ('New', 'New'), ('OS', 'OS')], default='New', max_length=20)),
                ('student_year', models.CharField(choices=[('1st Year', '1st Year'), ('2nd Year', '2nd Year'), ('3rd Year', '3rd Year'), ('4rth Year', '4th Year')], default='1st Year', max_length=10)),
                ('enrollment_status', models.CharField(choices=[('Enrolled', 'Enrolled'), ('Pre-Enrolled', 'Pre-Enrolled'), ('Dropped', 'Dropped'), ('Pending', 'Pending')], default='Pending', max_length=20)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='enrollment_detail_course', to='home.course')),
                ('scholarship_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='enrollment_detail_scholarship', to='home.scholarship')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_enrollment_detail', to='home.student_user')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('faculty_title', models.CharField(blank=True, max_length=50, null=True)),
                ('faculty_position', models.CharField(blank=True, max_length=50, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=None)),
                ('updated_on', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_paid', models.BooleanField(default=False)),
                ('enrollment_detail_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_detail_assessment', to='home.enrollmentdetail')),
                ('fee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fees', to='home.fees')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('or_no', models.CharField(max_length=20)),
                ('or_date', models.DateTimeField()),
                ('or_amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('enrollment_detail_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_detail_payment', to='home.enrollmentdetail')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_no', models.CharField(max_length=50)),
                ('capacity', models.IntegerField()),
                ('room_type', models.CharField(choices=[('Lecture', 'Lecture'), ('Laboratory', 'Laboratory')], default='Lecture', max_length=50)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='college_room', to='home.college')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=None)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('home_address', models.CharField(blank=True, max_length=50, null=True)),
                ('email_address', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=None)),
                ('update_on', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('descriptive_title', models.CharField(max_length=250)),
                ('lecture_unit', models.DecimalField(decimal_places=2, max_digits=4)),
                ('laboratory_unit', models.DecimalField(decimal_places=2, max_digits=4)),
                ('credit_unit', models.DecimalField(decimal_places=2, max_digits=4)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_course', to='home.course')),
            ],
        ),
        migrations.CreateModel(
            name='Course_Prospectus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('1st', '1st'), ('2nd', '2nd'), ('Summer', 'Summer')], default='1st', max_length=20)),
                ('year_level', models.CharField(choices=[('1st Year', '1st Year'), ('2nd Year', '2nd Year'), ('3rd Year', '3rd Year'), ('4th Year', '4th Year'), ('5th Year', '5th Year')], default='1st Year', max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prospectuse_course_name', to='home.course')),
                ('prospectus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_prospectus_name', to='home.prospectus')),
                ('pre_requisit1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_prereq1', to='home.subject')),
                ('pre_requisit2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_prereq2', to='home.subject')),
                ('pre_requisit3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_prereq3', to='home.subject')),
                ('pre_requisit4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_prereq4', to='home.subject')),
                ('pre_requisit5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_prereq5', to='home.subject')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prospectus_subject_name', to='home.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Class_Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_level', models.CharField(choices=[('1st Year', '1st Year'), ('2nd Year', '2nd Year'), ('3rd Year', '3rd Year'), ('4th Year', '4th Year'), ('5th Year', '5th Year')], default='1st Year', max_length=20)),
                ('schedule', models.CharField(max_length=50)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_class_schedule', to='home.course')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_class_schedule', to='home.enrollment')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_class_schedule', to='home.room')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_class_schedule', to='home.subject')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculty_class_schedule', to='home.faculty_user')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectTaken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_pre_enroll', models.BooleanField(blank=True, default=False, null=True)),
                ('is_registered', models.BooleanField(blank=True, default=False, null=True)),
                ('is_dropped', models.BooleanField(blank=True, default=False, null=True)),
                ('midterm_grade', models.CharField(blank=True, choices=[('not yet graded', 'not yet graded'), ('INC', 'INC'), ('NG', 'NG'), ('in_progress', 'in_progress'), ('5', '5'), ('3', '3'), ('2.75', '2.75'), ('2.5', '2.5'), ('2.23', '2.23'), ('2.0', '2.0'), ('1.75', '1.75'), ('1.5', '1.5'), ('1.25', '1.25'), ('1.0', '1.0')], default='not yet graded', max_length=20, null=True)),
                ('final_grade', models.CharField(blank=True, choices=[('not yet graded', 'not yet graded'), ('INC', 'INC'), ('NG', 'NG'), ('in_progress', 'in_progress'), ('5', '5'), ('3', '3'), ('2.75', '2.75'), ('2.5', '2.5'), ('2.23', '2.23'), ('2.0', '2.0'), ('1.75', '1.75'), ('1.5', '1.5'), ('1.25', '1.25'), ('1.0', '1.0')], default='not yet graded', max_length=20, null=True)),
                ('final_re_grade', models.CharField(blank=True, choices=[('not yet graded', 'not yet graded'), ('INC', 'INC'), ('NG', 'NG'), ('in_progress', 'in_progress'), ('5', '5'), ('3', '3'), ('2.75', '2.75'), ('2.5', '2.5'), ('2.23', '2.23'), ('2.0', '2.0'), ('1.75', '1.75'), ('1.5', '1.5'), ('1.25', '1.25'), ('1.0', '1.0')], default='not yet graded', max_length=20, null=True)),
                ('enrollment_detail_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_detail', to='home.enrollmentdetail')),
                ('schedule_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='subject_taken_schedule', to='home.class_schedule')),
            ],
        ),
    ]
